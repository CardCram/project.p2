// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StoreAPI.Service;

namespace StoreAPI.Service.Migrations
{
    [DbContext(typeof(CardCramContext))]
    partial class CardCramContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("StoreAPI.Service.Models.Card", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeckEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.HasIndex("DeckEntityId");

                    b.ToTable("Card");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            Answer = "1",
                            DeckEntityId = 1,
                            Question = "1x1"
                        });
                });

            modelBuilder.Entity("StoreAPI.Service.Models.Deck", b =>
                {
                    b.Property<int>("EntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EntityId");

                    b.ToTable("Deck");

                    b.HasData(
                        new
                        {
                            EntityId = 1,
                            Name = "Math"
                        });
                });

            modelBuilder.Entity("StoreAPI.Service.Models.Card", b =>
                {
                    b.HasOne("StoreAPI.Service.Models.Deck", "Deck")
                        .WithMany("Cards")
                        .HasForeignKey("DeckEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deck");
                });

            modelBuilder.Entity("StoreAPI.Service.Models.Deck", b =>
                {
                    b.Navigation("Cards");
                });
#pragma warning restore 612, 618
        }
    }
}
